/**
 * OCTRA API
 * # Introduction The OCTRA-API is a REST-API that allows apps to interact with the OCTRA-DB.  <img src=\"./assets/octra-backend-diagram.jpg\" alt=\"octra diagram\" />  In order to use this API you should meet the following requirements:  1. You have a valid App Token. You can request an APP Token from the administrator (contact ?).<br/>     The app token have to be send with each HTTP-Request in a HTTP-header called \"X-App-Token\". For example:<br/>     <code>X-App-Token: 7328z4093u4ß92u4902u348</code><br/><br/>     Apptokens are bound to specific domains (aka \"origins\").<br/><br/>  2. Most of the HTTP-requests needs the user to be authenticated. The OCTRA-API uses JWT for authentication and authorization.     A successful <a href=\"#tag/Authentication/operation/login\">login request</a> returns the JWT. This JWT must be appended to the \"Authorization\" HTTP-Header. For example:<br/>     <code>Authorization: Bearer 7328z40293i84ß034293ß02934</code><br/><br/>  ## Role model  This API makes use of a role model. There are general roles and project-specific roles. Each user has exactly one general role and for each project one role (at maximum).  ### General roles  <table> <tbody> <tr> <td><code>administrator</code></td> <td>System administrator with full access to all API functions.</td> </tr> <tr> <td><code>user</code></td> <td>Default role for users with normal access rights.</td> </tr> </tbody> </table>  ### Project-specific roles  <table> <tbody> <tr> <td><code>project_admin</code></td> <td>Project administrator with administrative access rights for the project he or she is assigned with.</td> </tr> <tr> <td><code>data_delivery</code></td> <td>Data deliverer with limited access rights.</td> </tr> <tr> <td><code>transcriber</code></td> <td>Person who is directly assigned to transcribe for a project.</td> </tr> </tbody> </table>
 *
 * OpenAPI spec version: 0.5.6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {AssignAccountRoleDto} from './AssignAccountRoleDto';

export class AccountDto {
  /**
   * Primary, unique identifier for this entry
   */
  'id': string;
  /**
   * date of creation
   */
  'creationdate': Date;
  /**
   * date of latest update
   */
  'updatedate': Date;
  /**
   * username of the account
   */
  'username': string;
  /**
   * email address of the account
   */
  'email': string;
  /**
   * login method
   */
  'loginmethod': AccountDtoLoginmethodEnum;
  /**
   * describes if the account is active.
   */
  'active': boolean;
  /**
   * some comment about this account.
   */
  'comment'?: string;
  /**
   * the general user role.
   */
  'generalRole': AccountDtoGeneralRoleEnum;
  /**
   * user roles of this account associated to specific projects.
   */
  'projectRoles': Array<AssignAccountRoleDto>;
  /**
   * date on that this account logged in.
   */
  'last_login'?: Date;
  'gender': string;
  'first_name': string;
  'last_name': string;
  'birthday': string;
  'street': string;
  'street_number': string;
  'phone': string;
  'town': string;
  'postcode': string;
  'state': string;
  'country': string;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: Array<{ name: string, baseName: string, type: string, format: string }> = [
    {
      'name': 'id',
      'baseName': 'id',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'creationdate',
      'baseName': 'creationdate',
      'type': 'Date',
      'format': 'date-time'
    },
    {
      'name': 'updatedate',
      'baseName': 'updatedate',
      'type': 'Date',
      'format': 'date-time'
    },
    {
      'name': 'username',
      'baseName': 'username',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'email',
      'baseName': 'email',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'loginmethod',
      'baseName': 'loginmethod',
      'type': 'AccountDtoLoginmethodEnum',
      'format': ''
    },
    {
      'name': 'active',
      'baseName': 'active',
      'type': 'boolean',
      'format': ''
    },
    {
      'name': 'comment',
      'baseName': 'comment',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'generalRole',
      'baseName': 'generalRole',
      'type': 'AccountDtoGeneralRoleEnum',
      'format': ''
    },
    {
      'name': 'projectRoles',
      'baseName': 'projectRoles',
      'type': 'Array<AssignAccountRoleDto>',
      'format': ''
    },
    {
      'name': 'last_login',
      'baseName': 'last_login',
      'type': 'Date',
      'format': 'date-time'
    },
    {
      'name': 'gender',
      'baseName': 'gender',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'first_name',
      'baseName': 'first_name',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'last_name',
      'baseName': 'last_name',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'birthday',
      'baseName': 'birthday',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'street',
      'baseName': 'street',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'street_number',
      'baseName': 'street_number',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'phone',
      'baseName': 'phone',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'town',
      'baseName': 'town',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'postcode',
      'baseName': 'postcode',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'state',
      'baseName': 'state',
      'type': 'string',
      'format': ''
    },
    {
      'name': 'country',
      'baseName': 'country',
      'type': 'string',
      'format': ''
    }];

  static getAttributeTypeMap() {
    return AccountDto.attributeTypeMap;
  }

  public constructor() {
  }
}


export type AccountDtoLoginmethodEnum = 'local' | 'shibboleth';
export type AccountDtoGeneralRoleEnum =
  'administrator'
  | 'transcriber'
  | 'project_admin'
  | 'data_delivery'
  | 'public'
  | 'user';

